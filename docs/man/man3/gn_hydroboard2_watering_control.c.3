.TH "components/grownode/leaves/gn_hydroboard2_watering_control.c" 3 "Sat Jan 29 2022" "GrowNode" \" -*- nroff -*-
.ad l
.nh
.SH NAME
components/grownode/leaves/gn_hydroboard2_watering_control.c
.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBgn_hb2_watering_control_data_t\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBTAG\fP   'gn_leaf_hb2_watering_control'"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBgn_hcc_status\fP { \fBHCC_HEATING\fP, \fBHCC_COOLING\fP, \fBHCC_OFF\fP, \fBHCC_HEATING\fP, \fBHCC_COOLING\fP, \fBHCC_OFF\fP }"
.br
.ti -1c
.RI "enum \fBgn_wat_status\fP { \fBWAT_WAIT\fP, \fBWAT_ON\fP, \fBWAT_OFF\fP, \fBWAT_WAIT\fP, \fBWAT_ON\fP, \fBWAT_OFF\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBgn_hb2_watering_control_task\fP (\fBgn_leaf_handle_t\fP leaf_config)"
.br
.ti -1c
.RI "\fBgn_leaf_param_validator_result_t\fP \fB_gn_hb2_watering_interval_validator\fP (\fBgn_leaf_param_handle_t\fP param, void **param_value)"
.br
.ti -1c
.RI "\fBgn_leaf_param_validator_result_t\fP \fB_gn_hb2_watering_time_validator\fP (\fBgn_leaf_param_handle_t\fP param, void **param_value)"
.br
.ti -1c
.RI "\fBgn_leaf_param_validator_result_t\fP \fB_gn_hb2_watering_target_temp_validator\fP (\fBgn_leaf_param_handle_t\fP param, void **param_value)"
.br
.ti -1c
.RI "static void \fB_gn_hb2_watering_control_stop_watering\fP (\fBgn_hb2_watering_control_data_t\fP *data)"
.br
.ti -1c
.RI "static void \fB_gn_hb2_watering_control_start_watering\fP (\fBgn_hb2_watering_control_data_t\fP *data)"
.br
.ti -1c
.RI "static void \fB_gn_hb2_watering_control_stop_hcc\fP (\fBgn_hb2_watering_control_data_t\fP *data)"
.br
.ti -1c
.RI "static void \fB_gn_hb2_watering_control_start_hcc_heating\fP (\fBgn_hb2_watering_control_data_t\fP *data)"
.br
.ti -1c
.RI "static void \fB_gn_hb2_watering_control_start_hcc_cooling\fP (\fBgn_hb2_watering_control_data_t\fP *data)"
.br
.ti -1c
.RI "static bool \fB_gn_hb2_watering_control_hcc_temp_low\fP (double p_wat_temp, double p_wat_t_temp)"
.br
.ti -1c
.RI "static bool \fB_gn_hb2_watering_control_hcc_temp_high\fP (double p_wat_temp, double p_wat_t_temp)"
.br
.ti -1c
.RI "static bool \fB_gn_hb2_watering_control_hcc_temp_ok\fP (double p_wat_temp, double p_wat_t_temp)"
.br
.ti -1c
.RI "void \fB_gn_hb2_watering_callback_intl\fP (\fBgn_leaf_handle_t\fP leaf_config)"
.br
.ti -1c
.RI "\fBgn_leaf_descriptor_handle_t\fP \fBgn_hb2_watering_control_config\fP (\fBgn_leaf_handle_t\fP leaf_config)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "static char * \fBPLT_FAN\fP = 'plt_fan'"
.br
.ti -1c
.RI "static char * \fBPLT_PUMP\fP = 'plt_pump'"
.br
.ti -1c
.RI "static char * \fBWAT_PUMP\fP = 'wat_pump'"
.br
.ti -1c
.RI "static char * \fBPLT_COOL\fP = 'plt_b'"
.br
.ti -1c
.RI "static char * \fBPLT_HOT\fP = 'plt_a'"
.br
.ti -1c
.RI "static char * \fBENV_FAN\fP = 'env_fan'"
.br
.ti -1c
.RI "static char * \fBBME280\fP = 'env_thp'"
.br
.ti -1c
.RI "static char * \fBDS18B20\fP = 'temps'"
.br
.ti -1c
.RI "static char * \fBWAT_LEV\fP = 'wat_lev'"
.br
.ti -1c
.RI "static char * \fBLIGHT_1\fP = 'lig_1'"
.br
.ti -1c
.RI "static char * \fBLIGHT_2\fP = 'lig_2'"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define TAG   'gn_leaf_hb2_watering_control'"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBgn_hcc_status\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIHCC_HEATING \fP\fP
.TP
\fB\fIHCC_COOLING \fP\fP
.TP
\fB\fIHCC_OFF \fP\fP
.TP
\fB\fIHCC_HEATING \fP\fP
.TP
\fB\fIHCC_COOLING \fP\fP
.TP
\fB\fIHCC_OFF \fP\fP
.SS "enum \fBgn_wat_status\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIWAT_WAIT \fP\fP
.TP
\fB\fIWAT_ON \fP\fP
.TP
\fB\fIWAT_OFF \fP\fP
.TP
\fB\fIWAT_WAIT \fP\fP
.TP
\fB\fIWAT_ON \fP\fP
.TP
\fB\fIWAT_OFF \fP\fP
.SH "Function Documentation"
.PP 
.SS "void _gn_hb2_watering_callback_intl (\fBgn_leaf_handle_t\fP leaf_config)"

.SS "static bool _gn_hb2_watering_control_hcc_temp_high (double p_wat_temp, double p_wat_t_temp)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool _gn_hb2_watering_control_hcc_temp_low (double p_wat_temp, double p_wat_t_temp)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool _gn_hb2_watering_control_hcc_temp_ok (double p_wat_temp, double p_wat_t_temp)\fC [inline]\fP, \fC [static]\fP"

.SS "static void _gn_hb2_watering_control_start_hcc_cooling (\fBgn_hb2_watering_control_data_t\fP * data)\fC [inline]\fP, \fC [static]\fP"

.SS "static void _gn_hb2_watering_control_start_hcc_heating (\fBgn_hb2_watering_control_data_t\fP * data)\fC [inline]\fP, \fC [static]\fP"

.SS "static void _gn_hb2_watering_control_start_watering (\fBgn_hb2_watering_control_data_t\fP * data)\fC [inline]\fP, \fC [static]\fP"

.SS "static void _gn_hb2_watering_control_stop_hcc (\fBgn_hb2_watering_control_data_t\fP * data)\fC [inline]\fP, \fC [static]\fP"

.SS "static void _gn_hb2_watering_control_stop_watering (\fBgn_hb2_watering_control_data_t\fP * data)\fC [inline]\fP, \fC [static]\fP"

.SS "\fBgn_leaf_param_validator_result_t\fP _gn_hb2_watering_interval_validator (\fBgn_leaf_param_handle_t\fP param, void ** param_value)"

.SS "\fBgn_leaf_param_validator_result_t\fP _gn_hb2_watering_target_temp_validator (\fBgn_leaf_param_handle_t\fP param, void ** param_value)"

.SS "\fBgn_leaf_param_validator_result_t\fP _gn_hb2_watering_time_validator (\fBgn_leaf_param_handle_t\fP param, void ** param_value)"

.SS "\fBgn_leaf_descriptor_handle_t\fP gn_hb2_watering_control_config (\fBgn_leaf_handle_t\fP leaf_config)"

.SS "void gn_hb2_watering_control_task (\fBgn_leaf_handle_t\fP leaf_config)"

.SH "Variable Documentation"
.PP 
.SS "char* BME280 = 'env_thp'\fC [static]\fP"

.SS "char* DS18B20 = 'temps'\fC [static]\fP"

.SS "char* ENV_FAN = 'env_fan'\fC [static]\fP"

.SS "char* LIGHT_1 = 'lig_1'\fC [static]\fP"

.SS "char* LIGHT_2 = 'lig_2'\fC [static]\fP"

.SS "char* PLT_COOL = 'plt_b'\fC [static]\fP"

.SS "char* PLT_FAN = 'plt_fan'\fC [static]\fP"

.SS "char* PLT_HOT = 'plt_a'\fC [static]\fP"

.SS "char* PLT_PUMP = 'plt_pump'\fC [static]\fP"

.SS "char* WAT_LEV = 'wat_lev'\fC [static]\fP"

.SS "char* WAT_PUMP = 'wat_pump'\fC [static]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for GrowNode from the source code\&.
