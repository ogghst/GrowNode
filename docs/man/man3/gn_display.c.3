.TH "components/grownode/gn_display.c" 3 "Thu Dec 30 2021" "GrowNode" \" -*- nroff -*-
.ad l
.nh
.SH NAME
components/grownode/gn_display.c
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBLV_TICK_PERIOD_MS\fP   1"
.br
.ti -1c
.RI "#define \fBTAG\fP   'gn_display'"
.br
.ti -1c
.RI "#define \fBLOG_MESSAGES\fP   14"
.br
.ti -1c
.RI "#define \fBGN_DISPLAY_HOR_RES\fP   240"
.br
.ti -1c
.RI "#define \fBGN_DISPLAY_VER_RES\fP   320"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBstyle_init\fP ()"
.br
.ti -1c
.RI "void \fBgrownode_scr_init\fP (lv_obj_t *scr)"
.br
.ti -1c
.RI "lv_obj_t * \fBbuild_status_bar\fP (lv_obj_t *parent, lv_obj_t *align_to)"
.br
.ti -1c
.RI "lv_obj_t * \fBbuild_leaf_panel\fP (lv_obj_t *parent, lv_obj_t *align_to)"
.br
.ti -1c
.RI "lv_obj_t * \fBbuild_log_panel\fP (lv_obj_t *parent, lv_obj_t *align_to)"
.br
.ti -1c
.RI "lv_obj_t * \fBbuild_action_panel\fP (lv_obj_t *parent, lv_obj_t *align_to)"
.br
.ti -1c
.RI "lv_obj_t * \fBbuild_bottom_panel\fP (lv_obj_t *parent, lv_obj_t *align_to)"
.br
.ti -1c
.RI "lv_obj_t * \fBmain_scr_init\fP (lv_obj_t *scr)"
.br
.ti -1c
.RI "void \fBinit_grownode_elements\fP ()"
.br
.ti -1c
.RI "void \fBmain_panel_open\fP (void *arg)"
.br
.ti -1c
.RI "void \fB_gn_display_lv_tick_task\fP (void *arg)"
.br
.ti -1c
.RI "void \fB_gn_display_log_system_handler\fP (void *handler_args, esp_event_base_t base, int32_t id, void *event_data)"
.br
.ti -1c
.RI "void \fB_gn_display_net_mqtt_handler\fP (void *handler_args, esp_event_base_t base, int32_t id, void *event_data)"
.br
.ti -1c
.RI "BaseType_t \fBgn_display_leaf_refresh_start\fP ()"
.br
.RI "start of code guard to ensure the block will be executed outside display refresh task "
.ti -1c
.RI "BaseType_t \fBgn_display_leaf_refresh_end\fP ()"
.br
.RI "end of code guard to ensure the block will be executed outside display refresh task "
.ti -1c
.RI "\fBgn_display_container_t\fP \fBgn_display_setup_leaf_display\fP (\fBgn_leaf_config_handle_t\fP leaf_config)"
.br
.RI "prepare a container where to draw the display components of the leaf "
.ti -1c
.RI "void \fB_gn_display_gui_task\fP (void *pvParameter)"
.br
.ti -1c
.RI "esp_err_t \fBgn_init_display\fP (\fBgn_config_handle_t\fP \fBconfig\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBgn_config_handle_intl_t\fP \fB_config\fP"
.br
.ti -1c
.RI "const int \fBGN_EVT_GROUP_GUI_COMPLETED_EVENT\fP = BIT0"
.br
.ti -1c
.RI "EventGroupHandle_t \fB_gn_gui_event_group\fP"
.br
.ti -1c
.RI "lv_obj_t * \fBstatusLabel\fP [\fBLOG_MESSAGES\fP]"
.br
.ti -1c
.RI "char \fBrawMessages\fP [\fBLOG_MESSAGES\fP][30]"
.br
.ti -1c
.RI "size_t \fBrawIdx\fP = 0"
.br
.ti -1c
.RI "\fBgn_leaf_config_handle_intl_t\fP \fB_current_leaf\fP = NULL"
.br
.ti -1c
.RI "bool \fB_initialized\fP = false"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define GN_DISPLAY_HOR_RES   240"

.SS "#define GN_DISPLAY_VER_RES   320"

.SS "#define LOG_MESSAGES   14"

.SS "#define LV_TICK_PERIOD_MS   1"

.SS "#define TAG   'gn_display'"

.SH "Function Documentation"
.PP 
.SS "void _gn_display_gui_task (void * pvParameter)"

.SS "void _gn_display_log_system_handler (void * handler_args, esp_event_base_t base, int32_t id, void * event_data)"

.SS "void _gn_display_lv_tick_task (void * arg)"

.SS "void _gn_display_net_mqtt_handler (void * handler_args, esp_event_base_t base, int32_t id, void * event_data)"

.SS "lv_obj_t* build_action_panel (lv_obj_t * parent, lv_obj_t * align_to)"

.SS "lv_obj_t* build_bottom_panel (lv_obj_t * parent, lv_obj_t * align_to)"

.SS "lv_obj_t* build_leaf_panel (lv_obj_t * parent, lv_obj_t * align_to)"

.SS "lv_obj_t* build_log_panel (lv_obj_t * parent, lv_obj_t * align_to)"

.SS "lv_obj_t* build_status_bar (lv_obj_t * parent, lv_obj_t * align_to)"

.SS "BaseType_t gn_display_leaf_refresh_end ()"

.PP
end of code guard to ensure the block will be executed outside display refresh task this is implemented with xSemaphoreGive
.PP
\fBReturns\fP
.RS 4
result of the xSemaphoreTake function 
.RE
.PP

.SS "BaseType_t gn_display_leaf_refresh_start ()"

.PP
start of code guard to ensure the block will be executed outside display refresh task this is implemented with xSemaphoreTake
.PP
\fBReturns\fP
.RS 4
result of the xSemaphoreTake function 
.RE
.PP

.SS "\fBgn_display_container_t\fP gn_display_setup_leaf_display (\fBgn_leaf_config_handle_t\fP leaf_config)"

.PP
prepare a container where to draw the display components of the leaf this has to be called into the display refresh task 
.PP
\fBSee also\fP
.RS 4
\fBgn_display_leaf_refresh_start()\fP
.RE
.PP
\fBReturns\fP
.RS 4
a pointer to lv_obj_t (to be casted) 
.RE
.PP

.SS "esp_err_t gn_init_display (\fBgn_config_handle_t\fP config)"
starts the display resources:
.IP "\(bu" 2
initialize all objects
.IP "\(bu" 2
listen to events in order to
.PP
.PP
this should be called only into the node config init\&. a second inizialization request has no effects\&. *
.PP
\fBParameters\fP
.RS 4
\fIconfig\fP the node configuration
.RE
.PP
\fBReturns\fP
.RS 4
the status of the initialization\&. ESP_OK if everything went well\&. 
.RE
.PP

.SS "void grownode_scr_init (lv_obj_t * scr)"

.SS "void init_grownode_elements ()"

.SS "void main_panel_open (void * arg)"

.SS "lv_obj_t* main_scr_init (lv_obj_t * scr)"

.SS "void style_init ()"

.SH "Variable Documentation"
.PP 
.SS "\fBgn_config_handle_intl_t\fP _config"

.SS "\fBgn_leaf_config_handle_intl_t\fP _current_leaf = NULL"

.SS "EventGroupHandle_t _gn_gui_event_group"

.SS "bool _initialized = false"

.SS "const int GN_EVT_GROUP_GUI_COMPLETED_EVENT = BIT0"

.SS "size_t rawIdx = 0"

.SS "char rawMessages[\fBLOG_MESSAGES\fP][30]"

.SS "lv_obj_t* statusLabel[\fBLOG_MESSAGES\fP]"

.SH "Author"
.PP 
Generated automatically by Doxygen for GrowNode from the source code\&.
