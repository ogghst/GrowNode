.TH "components/grownode/grownode_intl.h" 3 "Thu Dec 30 2021" "GrowNode" \" -*- nroff -*-
.ad l
.nh
.SH NAME
components/grownode/grownode_intl.h
.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBgn_leaves_list\fP"
.br
.ti -1c
.RI "struct \fBgn_nodes_list\fP"
.br
.ti -1c
.RI "struct \fBgn_config_t\fP"
.br
.ti -1c
.RI "struct \fBgn_node_config_t\fP"
.br
.ti -1c
.RI "struct \fBgn_leaf_config_t\fP"
.br
.ti -1c
.RI "struct \fBgn_param_val_t\fP"
.br
.ti -1c
.RI "struct \fBgn_leaf_param\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBgn_node_config_t\fP * \fBgn_node_config_handle_intl_t\fP"
.br
.ti -1c
.RI "typedef struct \fBgn_leaf_config_t\fP * \fBgn_leaf_config_handle_intl_t\fP"
.br
.ti -1c
.RI "typedef struct \fBgn_config_t\fP * \fBgn_config_handle_intl_t\fP"
.br
.ti -1c
.RI "typedef \fBgn_param_val_t\fP * \fBgn_param_val_handle_t\fP"
.br
.ti -1c
.RI "typedef \fBgn_param_val_t\fP * \fBgn_param_val_handle_int_t\fP"
.br
.ti -1c
.RI "typedef struct \fBgn_leaf_param\fP \fBgn_leaf_param_t\fP"
.br
.ti -1c
.RI "typedef \fBgn_leaf_param_t\fP * \fBgn_leaf_param_handle_intl_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "const uint8_t server_cert_pem_start[] \fBasm\fP ('_binary_ca_cert_pem_start')"
.br
.ti -1c
.RI "const uint8_t server_cert_pem_end[] \fBasm\fP ('_binary_ca_cert_pem_end')"
.br
.ti -1c
.RI "\fBgn_err_t\fP \fB_gn_send_event_to_leaf\fP (\fBgn_leaf_config_handle_intl_t\fP leaf_config, \fBgn_leaf_parameter_event_handle_t\fP evt)"
.br
.RI "send event to leaf using xQueueSend\&. the data will be null terminated\&. "
.ti -1c
.RI "\fBgn_err_t\fP \fB_gn_leaf_parameter_update\fP (const \fBgn_leaf_config_handle_t\fP leaf_config, const char *param, const void *data, const int data_len)"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBgn_config_t\fP* \fBgn_config_handle_intl_t\fP"

.SS "typedef struct \fBgn_leaf_config_t\fP* \fBgn_leaf_config_handle_intl_t\fP"

.SS "typedef \fBgn_leaf_param_t\fP* \fBgn_leaf_param_handle_intl_t\fP"

.SS "typedef struct \fBgn_leaf_param\fP \fBgn_leaf_param_t\fP"

.SS "typedef struct \fBgn_node_config_t\fP* \fBgn_node_config_handle_intl_t\fP"

.SS "typedef \fBgn_param_val_t\fP* \fBgn_param_val_handle_int_t\fP"

.SS "typedef \fBgn_param_val_t\fP* \fBgn_param_val_handle_t\fP"

.SH "Function Documentation"
.PP 
.SS "\fBgn_err_t\fP _gn_leaf_parameter_update (const \fBgn_leaf_config_handle_t\fP leaf_config, const char * param, const void * data, const int data_len)"
update the parameter value from the event supplied\&. this is called from event handling system\&. hence, the parameter value can be changed here only if it has WRITE access
.PP
\fBReturns\fP
.RS 4
ESP_OK if parameter is changed, 
.RE
.PP

.SS "\fBgn_err_t\fP _gn_send_event_to_leaf (\fBgn_leaf_config_handle_intl_t\fP leaf_config, \fBgn_leaf_parameter_event_handle_t\fP evt)"

.PP
send event to leaf using xQueueSend\&. the data will be null terminated\&. 
.PP
\fBParameters\fP
.RS 4
\fIleaf_config\fP the leaf from where the event is sent 
.br
\fIevt\fP the event to send
.RE
.PP
\fBReturns\fP
.RS 4
GN_ERR_EVENT_NOT_SENT if not possible to send event 
.RE
.PP

.SS "const uint8_t server_cert_pem_end [] asm ('_binary_ca_cert_pem_end')"

.SS "const uint8_t server_cert_pem_start [] asm ('_binary_ca_cert_pem_start')"

.SH "Author"
.PP 
Generated automatically by Doxygen for GrowNode from the source code\&.
