.TH "components/grownode/gn_mqtt_protocol.h" 3 "Thu Dec 30 2021" "GrowNode" \" -*- nroff -*-
.ad l
.nh
.SH NAME
components/grownode/gn_mqtt_protocol.h
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB_GN_MQTT_MAX_TOPIC_LENGTH\fP   80"
.br
.ti -1c
.RI "#define \fB_GN_MQTT_MAX_PAYLOAD_LENGTH\fP   4096"
.br
.ti -1c
.RI "#define \fB_GN_MQTT_COMMAND_MESS\fP   'cmd'"
.br
.ti -1c
.RI "#define \fB_GN_MQTT_STATUS_MESS\fP   'sts'"
.br
.ti -1c
.RI "#define \fB_GN_MQTT_LOG_MESS\fP   'log'"
.br
.ti -1c
.RI "#define \fB_GN_MQTT_PAYLOAD_RST\fP   'RST'"
.br
.ti -1c
.RI "#define \fB_GN_MQTT_PAYLOAD_OTA\fP   'OTA'"
.br
.ti -1c
.RI "#define \fB_GN_MQTT_PAYLOAD_RBT\fP   'RBT'"
.br
.ti -1c
.RI "#define \fB_GN_MQTT_DEFAULT_QOS\fP   0"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBgn_err_t\fP \fBgn_mqtt_publish_leaf\fP (\fBgn_leaf_config_handle_t\fP leaf_config)"
.br
.RI "subscribe leaf to the MQTT server in order to receive messages "
.ti -1c
.RI "esp_err_t \fBgn_mqtt_subscribe_leaf_param\fP (\fBgn_leaf_param_handle_t\fP param)"
.br
.ti -1c
.RI "esp_err_t \fBgn_mqtt_init\fP (\fBgn_config_handle_t\fP conf)"
.br
.ti -1c
.RI "esp_err_t \fBgn_mqtt_send_node_config\fP (\fBgn_node_config_handle_t\fP conf)"
.br
.ti -1c
.RI "\fBgn_err_t\fP \fBgn_mqtt_send_leaf_message\fP (\fBgn_leaf_config_handle_t\fP leaf, const char *msg)"
.br
.ti -1c
.RI "\fBgn_err_t\fP \fBgn_mqtt_send_leaf_param\fP (\fBgn_leaf_param_handle_t\fP \fBconfig\fP)"
.br
.ti -1c
.RI "\fBgn_err_t\fP \fBgn_mqtt_send_startup_message\fP (\fBgn_config_handle_t\fP \fB_config\fP)"
.br
.ti -1c
.RI "\fBgn_err_t\fP \fBgn_mqtt_send_reboot_message\fP (\fBgn_config_handle_t\fP \fB_config\fP)"
.br
.ti -1c
.RI "\fBgn_err_t\fP \fBgn_mqtt_send_reset_message\fP (\fBgn_config_handle_t\fP \fB_config\fP)"
.br
.ti -1c
.RI "\fBgn_err_t\fP \fBgn_mqtt_send_ota_message\fP (\fBgn_config_handle_t\fP \fB_config\fP)"
.br
.ti -1c
.RI "\fBgn_err_t\fP \fBgn_mqtt_send_log_message\fP (\fBgn_config_handle_t\fP \fB_config\fP, char *log_tag, \fBgn_log_level_t\fP level, char *message)"
.br
.ti -1c
.RI "\fBgn_server_status_t\fP \fBgn_mqtt_get_status\fP ()"
.br
.RI "returns the status of the server "
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define _GN_MQTT_COMMAND_MESS   'cmd'"

.SS "#define _GN_MQTT_DEFAULT_QOS   0"

.SS "#define _GN_MQTT_LOG_MESS   'log'"

.SS "#define _GN_MQTT_MAX_PAYLOAD_LENGTH   4096"

.SS "#define _GN_MQTT_MAX_TOPIC_LENGTH   80"

.SS "#define _GN_MQTT_PAYLOAD_OTA   'OTA'"

.SS "#define _GN_MQTT_PAYLOAD_RBT   'RBT'"

.SS "#define _GN_MQTT_PAYLOAD_RST   'RST'"

.SS "#define _GN_MQTT_STATUS_MESS   'sts'"

.SH "Function Documentation"
.PP 
.SS "\fBgn_server_status_t\fP gn_mqtt_get_status ()"

.PP
returns the status of the server 
.PP
\fBReturns\fP
.RS 4
the current status 
.RE
.PP

.SS "esp_err_t gn_mqtt_init (\fBgn_config_handle_t\fP conf)"

.SS "\fBgn_err_t\fP gn_mqtt_publish_leaf (\fBgn_leaf_config_handle_t\fP _leaf_config)"

.PP
subscribe leaf to the MQTT server in order to receive messages 
.PP
\fBParameters\fP
.RS 4
\fIleaf_config\fP the leaf to start
.RE
.PP
\fBReturns\fP
.RS 4
status of the operation 
.RE
.PP

.SS "\fBgn_err_t\fP gn_mqtt_send_leaf_message (\fBgn_leaf_config_handle_t\fP leaf, const char * msg)"

.SS "\fBgn_err_t\fP gn_mqtt_send_leaf_param (\fBgn_leaf_param_handle_t\fP config)"

.SS "\fBgn_err_t\fP gn_mqtt_send_log_message (\fBgn_config_handle_t\fP _config, char * log_tag, \fBgn_log_level_t\fP level, char * message)"

.SS "esp_err_t gn_mqtt_send_node_config (\fBgn_node_config_handle_t\fP conf)"

.SS "\fBgn_err_t\fP gn_mqtt_send_ota_message (\fBgn_config_handle_t\fP _config)"

.SS "\fBgn_err_t\fP gn_mqtt_send_reboot_message (\fBgn_config_handle_t\fP _config)"

.SS "\fBgn_err_t\fP gn_mqtt_send_reset_message (\fBgn_config_handle_t\fP _config)"

.SS "\fBgn_err_t\fP gn_mqtt_send_startup_message (\fBgn_config_handle_t\fP _config)"

.SS "esp_err_t gn_mqtt_subscribe_leaf_param (\fBgn_leaf_param_handle_t\fP param)"

.SH "Author"
.PP 
Generated automatically by Doxygen for GrowNode from the source code\&.
